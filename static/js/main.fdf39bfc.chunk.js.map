{"version":3,"sources":["context/TableContext.js","components/Search.jsx","components/Table.jsx","services/fetchApi.js","context/TableProvider.js","App.js","index.js"],"names":["TableContext","createContext","Search","useContext","setFilterName","getFilterNumeric","allFilters","useState","column","comparison","value","getNumeric","setGetNumeric","handleFilterColumn","target","name","onSubmit","e","preventDefault","htmlFor","type","data-testid","id","onChange","map","filter","key","Table","data","isLoading","allData","length","Object","keys","title","info","index","entries","content","fetchApi","fetch","then","response","json","ok","Promise","resolve","reject","TableProvider","children","setIsLoading","setData","filterColumn","setFilterColumn","filterName","filterNumeric","setFilterNumeric","useEffect","a","planetsApi","results","getPlanets","planet","includes","splice","indexOf","Number","providerValue","filters","filterByName","filterByNumericValues","Provider","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdf39bfc.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst TableContext = createContext();\n\nexport default TableContext;\n","import React, { useContext, useState } from 'react';\nimport TableContext from '../context/TableContext';\n\nfunction Search() {\n  const { setFilterName, getFilterNumeric, allFilters } = useContext(TableContext);\n  const [getNumeric, setGetNumeric] = useState({\n    column: 'population',\n    comparison: 'maior',\n    value: 0,\n  });\n\n  const handleFilterName = ({ target }) => {\n    const { value } = target;\n    setFilterName(value);\n  };\n\n  const handleFilterColumn = ({ target }) => {\n    const { name, value } = target;\n    setGetNumeric({\n      ...getNumeric,\n      [name]: value,\n    });\n  };\n\n  function onSubmit(e) {\n    e.preventDefault();\n    getFilterNumeric({\n      column: getNumeric.column,\n      comparison: getNumeric.comparison,\n      value: getNumeric.value,\n    });\n  }\n\n  return (\n    <form onSubmit={ onSubmit }>\n      <label htmlFor=\"name\">\n        Filtrar por nome\n        <input\n          type=\"text\"\n          data-testid=\"name-filter\"\n          name=\"name\"\n          id=\"name\"\n          onChange={ handleFilterName }\n        />\n      </label>\n      <select\n        data-testid=\"column-filter\"\n        name=\"column\"\n        onChange={ handleFilterColumn }\n      >\n        {allFilters.map((filter) => (\n          <option key={ filter } value={ filter }>\n            {filter}\n          </option>))}\n      </select>\n      <select\n        data-testid=\"comparison-filter\"\n        name=\"comparison\"\n        onChange={ handleFilterColumn }\n      >\n        <option value=\"maior que\">maior que</option>\n        <option value=\"menor que\">menor que</option>\n        <option value=\"igual a\">igual a</option>\n      </select>\n      <input\n        type=\"number\"\n        data-testid=\"value-filter\"\n        name=\"value\"\n        onChange={ handleFilterColumn }\n      />\n      <button\n        type=\"submit\"\n        data-testid=\"button-filter\"\n      >\n        Filtrar\n      </button>\n    </form>\n  );\n}\n\nexport default Search;\n","import React, { useContext } from 'react';\nimport TableContext from '../context/TableContext';\n\nfunction Table() {\n  const { data, isLoading, allData } = useContext(TableContext);\n\n  return data.length > 0 && !isLoading ? (\n    <main>\n      <table>\n        <thead>\n          <tr>\n            {Object.keys(data[0]).map((title) => (\n              title === 'residents' ? null : <th key={ title }>{title}</th>))}\n          </tr>\n        </thead>\n        <tbody>\n          {allData.map((info, index) => (\n            <tr key={ index }>\n              {Object.entries(info).map((content) => (\n                content[0] === 'residents' ? null\n                  : <td key={ content[1] }>{ content[1] }</td>))}\n            </tr>))}\n        </tbody>\n      </table>\n    </main>\n  ) : <span>Carregando...</span>;\n}\n\nexport default Table;\n","const ENDPOINT = 'https://swapi-trybe.herokuapp.com/api/planets/';\n\nconst fetchApi = () => (\n  fetch(ENDPOINT).then((response) => (\n    response.json()\n      .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n  ))\n);\n\nexport default fetchApi;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport fetchApi from '../services/fetchApi';\nimport TableContext from './TableContext';\n\nfunction TableProvider({ children }) {\n  const optionsFilter = [\n    'population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [filterColumn, setFilterColumn] = useState(optionsFilter);\n  const [filterName, setFilterName] = useState('');\n  const [filterNumeric, setFilterNumeric] = useState([]);\n\n  useEffect(() => {\n    const getPlanets = async () => {\n      setIsLoading(true);\n      const planetsApi = await fetchApi();\n      setData(planetsApi.results);\n      setIsLoading(false);\n    };\n    getPlanets();\n  }, []);\n\n  const getFilterNumeric = (filters) => {\n    setFilterNumeric([...filterNumeric, filters]);\n  };\n\n  let allData = data;\n  const allFilters = filterColumn;\n\n  if (filterName) {\n    allData = allData.filter((planet) => planet.name.includes(filterName));\n  }\n\n  filterNumeric.map(({ column }) => (\n    allFilters.filter((filter) => (\n      column === filter ? allFilters.splice(allFilters.indexOf(filter), 1) : null\n    ))\n  ));\n\n  filterNumeric.filter(({ column, comparison, value }) => {\n    if (comparison === 'maior que') {\n      allData = allData.filter((planet) => Number(planet[column]) > Number(value));\n    } else if (comparison === 'menor que') {\n      allData = allData.filter((planet) => Number(planet[column]) < Number(value));\n    } else if (comparison === 'igual a') {\n      allData = allData.filter((planet) => Number(planet[column]) === Number(value));\n    }\n    return allData;\n  });\n\n  const providerValue = {\n    isLoading,\n    data,\n    allFilters,\n    allData,\n    filters: {\n      filterByName: { name: filterName },\n      filterByNumericValues: filterNumeric,\n    },\n    setFilterName,\n    getFilterNumeric,\n    setFilterColumn,\n  };\n\n  return (\n    <TableContext.Provider value={ providerValue }>\n      {children}\n    </TableContext.Provider>\n  );\n}\n\nTableProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default TableProvider;\n","import React from 'react';\nimport './App.css';\nimport Search from './components/Search';\nimport Table from './components/Table';\nimport TableProvider from './context/TableProvider';\n\nfunction App() {\n  return (\n    <TableProvider>\n      <Search />\n      <Table />\n    </TableProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}